https://leetcode.com/problems/minimum-distance-between-bst-nodes/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Integer min = Integer.MAX_VALUE;
    public int minDiffInBST(TreeNode root) {
        check(root);
        return min;
    }
    private TreeNode check(TreeNode root){
        if(root == null){
            return null;
        }
        TreeNode node1 = check(root.left);
        if(node1 != null){
            min = Math.min(min, Math.abs(root.val - node1.val));
        }
        TreeNode node2 = check(root.right);
        if(node2 != null){
            min = Math.min(min, Math.abs(root.val - node2.val));
        }
        return root;
    }
}

